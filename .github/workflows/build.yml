name: Build Python Executables for Windows and Linux (deb)

on:
  push:
    tags:
      - "v*"

jobs:
  build_windows:
    runs-on: windows-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller

      - name: Build executable for Windows
        run: |
          pyinstaller --onefile --name meu-ip --icon=assets/icone.ico --noconsole --strip main.py

      - name: Upload Windows executable as artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-executable
          path: dist/meu-ip.exe

  build_linux:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          sudo apt-get update
          sudo apt-get install -y ruby-dev build-essential
          sudo gem install --no-document fpm

      - name: Build executable for Linux
        run: |
          pyinstaller --onefile --name meu-ip --icon=assets/icone.png --noconsole --strip main.py

      - name: Package executable into .deb
        run: |
          mkdir -p package/usr/local/bin
          cp dist/meu-ip package/usr/local/bin/
          fpm -s dir -t deb -n meu-ip -v 1.0 --prefix=/ package

      - name: Upload Linux .deb package as artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-deb-package
          path: package/*.deb

  release:
    needs: [build_windows, build_linux]
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v4
      
      - name: Download Windows executable
        uses: actions/download-artifact@v4
        with:
          name: windows-executable
          path: dist
      
      - name: Download Linux .deb package
        uses: actions/download-artifact@v4
        with:
          name: linux-deb-package
          path: package
      
      - name: Debug artifacts
        run: |
          echo "Conteúdo de dist:"
          ls -la dist/ || echo "Diretório dist não encontrado!"
          echo "Conteúdo de package:"
          ls -la package/ || echo "Diretório package não encontrado!"
          echo "Listando todos os arquivos baixados:"
          find . -type f -not -path "./.git*" | sort
      
      - name: Prepare release files
        run: |
          mkdir -p release_files
          # Cria arquivos vazios caso não sejam encontrados (para depuração)
          if [ -d "dist" ]; then
            find dist -type f -name "*.exe" -exec cp {} release_files/ \;
          else
            echo "Diretório dist não encontrado" > release_files/debug_dist.txt
          fi
          
          if [ -d "package" ]; then
            find package -type f -name "*.deb" -exec cp {} release_files/ \;
          else
            echo "Diretório package não encontrado" > release_files/debug_package.txt
          fi
          
          echo "Arquivos preparados para release:"
          ls -la release_files/
      
      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          files: release_files/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}